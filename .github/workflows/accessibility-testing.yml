name: Accessibility Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  accessibility-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the application
        run: npm run build

      - name: Start the application
        run: npm start &
        env:
          CI: true

      - name: Wait for application to be ready
        run: |
          echo "Waiting for application to start..."
          npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Install accessibility testing tools
        run: |
          npm install -g pa11y lighthouse
          npm install --save-dev playwright @axe-core/playwright
          npx playwright install chromium

      - name: Run accessibility tests
        run: |
          chmod +x ./test-accessibility.sh
          ./test-accessibility.sh

      - name: Archive accessibility test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-test-results
          path: accessibility-test-results/
          retention-days: 30

      - name: Check for accessibility violations
        run: |
          # Check if any pa11y tests found errors
          if ls accessibility-test-results/pa11y-*.html 1> /dev/null 2>&1; then
            echo "✅ pa11y reports generated successfully"
          else
            echo "❌ pa11y test failed"
            exit 1
          fi
          
          # Check if any axe tests found violations
          if ls accessibility-test-results/axe-*.json 1> /dev/null 2>&1; then
            for file in accessibility-test-results/axe-*.json; do
              violations=$(cat "$file" | jq '.violations | length')
              if [ "$violations" -gt 0 ]; then
                echo "❌ Accessibility violations found in $file: $violations violations"
                cat "$file" | jq '.violations'
                exit 1
              fi
            done
            echo "✅ No accessibility violations found"
          else
            echo "❌ axe test failed"
            exit 1
          fi

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const resultsDir = 'accessibility-test-results';
              let comment = '## 🔍 Accessibility Test Results\n\n';
              
              // Check for violations in axe results
              const axeFiles = fs.readdirSync(resultsDir).filter(f => f.startsWith('axe-') && f.endsWith('.json'));
              let totalViolations = 0;
              
              for (const file of axeFiles) {
                const content = JSON.parse(fs.readFileSync(path.join(resultsDir, file), 'utf8'));
                totalViolations += content.violations.length;
              }
              
              if (totalViolations === 0) {
                comment += '✅ **All accessibility tests passed!**\n\n';
                comment += '- 🎯 WCAG 2.1 AA compliance maintained\n';
                comment += '- 🚫 Zero accessibility violations found\n';
                comment += '- 🧪 Automated testing completed successfully\n\n';
                comment += `📊 **Test Coverage**: ${axeFiles.length} pages tested\n\n`;
                comment += '🔗 [View detailed results in the Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';
              } else {
                comment += `❌ **Accessibility violations found**: ${totalViolations} total violations\n\n`;
                comment += '⚠️ Please review and fix accessibility issues before merging.\n\n';
                comment += '🔗 [View detailed results in the Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';
              }
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not post comment:', error.message);
            }
